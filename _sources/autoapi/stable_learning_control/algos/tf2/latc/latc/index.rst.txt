stable_learning_control.algos.tf2.latc.latc
===========================================

.. py:module:: stable_learning_control.algos.tf2.latc.latc

.. autoapi-nested-parse::

   Lyapunov (soft) Actor-Twin Critic (LATC) algorithm.

   This is a modified version of the Lyapunov Actor-Critic algorithm of
   `Han et al. 2020 <https://arxiv.org/abs/2004.14288>`_. Like the original SAC algorithm,
   this LAC variant uses two critics instead of one to mitigate a possible underestimation
   bias, while the original LAC only uses one critic. For more information, see
   `Haarnoja et al. 2018 <https://arxiv.org/pdf/1812.05905.pdf>`_ or the
   :ref:`LATC documentation <latc>`.

   .. note::
       Code Conventions:
           -   We use a `_` suffix to distinguish the next state from the current state.
           -   We use a `targ` suffix to distinguish actions/values coming from the target
               network.

   .. attention::
       To reduce the amount of code duplication, the code that implements the LATC algorithm
       is found in the :class:`~stable_learning_control.algos.tf2.lac.lac.LAC` class.
       As a result this module wraps the
       :func:`~stable_learning_control.algos.tf2.lac.lac.lac` function so that it uses
       the :class:`~stable_learning_control.algos.tf2.policies.lyapunov_actor_twin_critic.LyapunovActorTwinCritic`
       as the actor-critic architecture. When this architecture is used, the
       :meth:`~stable_learning_control.algos.tf2.policies.lyapunov_actor_twin_critic.LyapunovActorTwinCritic.update`
       method is modified such that the two critics.



Attributes
----------

.. autoapisummary::

   stable_learning_control.algos.tf2.latc.latc.STD_OUT_LOG_VARS_DEFAULT
   stable_learning_control.algos.tf2.latc.latc.parser


Functions
---------

.. autoapisummary::

   stable_learning_control.algos.tf2.latc.latc.latc


Module Contents
---------------

.. py:data:: STD_OUT_LOG_VARS_DEFAULT
   :value: ['Epoch', 'TotalEnvInteracts', 'AverageEpRet', 'AverageTestEpRet', 'AverageTestEpLen',...


.. py:function:: latc(env_fn, actor_critic=None, *args, **kwargs)

   Trains the LATC algorithm in a given environment.

   :param env_fn: A function which creates a copy of the environment. The environment
                  must satisfy the gymnasium API.
   :param actor_critic: The constructor method for a
                        TensorFlow Module with an ``act`` method, a ``pi`` module and several ``Q``
                        or ``L`` modules. The ``act`` method and ``pi`` module should accept batches
                        of observations as inputs, and the ``Q*`` and
                        ``L`` modules should accept a batch of observations and a batch of actions
                        as inputs. When called, these modules should return:

                        ===========  ================  ======================================
                        Call         Output Shape      Description
                        ===========  ================  ======================================
                        ``act``      (batch, act_dim)   | Numpy array of actions for each
                                                        | observation.
                        ``Q*/L``     (batch,)           | Tensor containing one current estimate
                                                        | of ``Q*/L`` for the provided
                                                        | observations and actions. (Critical:
                                                        | make sure to flatten this!)
                        ===========  ================  ======================================

                        Calling ``pi`` should return:

                        ===========  ================  ======================================
                        Symbol       Shape             Description
                        ===========  ================  ======================================
                        ``a``        (batch, act_dim)   | Tensor containing actions from policy
                                                        | given observations.
                        ``logp_pi``  (batch,)           | Tensor containing log probabilities of
                                                        | actions in ``a``. Importantly:
                                                        | gradients should be able to flow back
                                                        | into ``a``.
                        ===========  ================  ======================================

                        Defaults to
                        :class:`~stable_learning_control.algos.tf2.policies.lyapunov_actor_twin_critic.LyapunovActorTwinCritic`
   :type actor_critic: tf.Module, optional
   :param \*args: The positional arguments to pass to the :meth:`~stable_learning_control.algos.tf2.lac.lac.lac` method.
   :param \*\*kwargs: The keyword arguments to pass to the :meth:`~stable_learning_control.algos.tf2.lac.lac.lac` method.

   .. note::
       Wraps the :func:`~stable_learning_control.algos.tf2.lac.lac.lac` function so
       that the :class:`~stable_learning_control.algos.tf2.policies.lyapunov_actor_twin_critic.LyapunovActorTwinCritic`
       architecture is used as the actor critic.


.. py:data:: parser

