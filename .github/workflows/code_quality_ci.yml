# Checks the code quality of every commit and pr.
name: Code Quality CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  spell-check:
    name: runner / misspell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: warning
  alex: # Checks docs for inconsiderate writing
    name: runner / alex
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-alex@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: warning
  markdown-lint: # Lints the markdown code
    name: runner / remark-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout mlc repository
        uses: actions/checkout@v2
      - name: Check markdown code quality using remark-lint
        uses: reviewdog/action-remark-lint@v1.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: warning
          fail_on_error: true
  black: # Check python code format
    name: runner / black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check files using black formatter
        uses: reviewdog/action-black@v1.1.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: error
          fail_on_error: true
      - name: Apply black formatting if reviewdog found formatting errors
        if: failure()
        run: |
          black .
      - name: Commit black formatting results
        uses: stefanzweifel/git-auto-commit-action@v4
        if: failure()
        with:
          commit_message: ":art: Format Python code with psf/black push"
  flake8: # Lints python code
    name: runner / flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout mlc repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GA_SUB }}
      - name: Install system dependencies
        run: sudo apt-get install libopenmpi-dev
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache python environment
        uses: actions/cache@v2
        id: cache-python-env
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('pyproject.toml') }}-dev
      - name: Update pip
        run: |
          python -m pip install --upgrade pip
      - name: Install the mlc package with its dependencies
        if: steps.cache-python-env.outputs.cache-hit != 'true'
        run: |
            pip install -e .[dev]
      - name: flake8 Lint
        uses: reviewdog/action-flake8@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: warning
          fail_on_error: true