# Makes sure the package build on linux.
name: Linux CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
jobs:
  python-tests:
    name: Perform python-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Run all matrix jobs
      matrix:
        python-version: [3.6, 3.7, 3.8] # Supported python versions
    steps:
      - name: Checkout mlc repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GA_SUB }}
      - name: Install system dependencies
        run: sudo apt update; sudo apt install libopenmpi-dev
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache python environment
        uses: actions/cache@v2
        id: cache-python-env
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('pyproject.toml') }}-dev
      - name: Update pip
        if: steps.cache-python-env.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
      - name: Install the mlc package with its dependencies
        if: steps.cache-python-env.outputs.cache-hit != 'true'
        run: |
          pip install -e .[dev]
      - name: Test with Pytest
        run: |
          set -o pipefail
          pytest --cache-clear --html=pytest/${{ matrix.python-version }}/html/results.html --junitxml=pytest/${{ matrix.python-version }}/xml/results.xml --cov --cov-report=html:pytest/${{ matrix.python-version }}/cov/pytest-coverage.txt --cov-report=term-missing | tee pytest-coverage.txt
          set +o pipefail
      - name: Upload Pytest test results to artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: pytest/
      - name: Comment coverage
        uses: coroo/pytest-coverage-commentator@v1.0.2
        if: always() && github.event_name == 'pull_request'
        with:
          pytest-coverage: pytest-coverage.txt
