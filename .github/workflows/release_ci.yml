# Github action that makes sure that all the version tags are up to date when
# A new version is released.
# NOTE: Runs when a new version is released (not published).
name: MLC release CI
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    types:
      - labeled
jobs:
  release:
    if: github.event.action != 'labeled'
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      # NOTE: Fix detached head state when triggered on tag such that we can commit changes
      - name: Check if triggered by tag or by label
        id: get_ref
        uses: haya14busa/action-cond@v1
        with:
          cond: "${{ !startsWith(github.ref, 'refs/tags/') }}"
          if_true: ${{ github.ref }}
          if_false: "main"
      - name: Checkout mlc repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.get_ref.outputs.value }}
          submodules: recursive
          token: ${{ secrets.GA_SUB }}
      # Bump version on merging Pull Requests with specific labels.
      # (bump:major,bump:minor,bump:patch)
      - name: Bump version on merging Pull Requests with specific labels.
        if: "!startsWith(github.ref, 'refs/tags/')"
        id: bumpr
        uses: haya14busa/action-bumpr@v1
      # Update corresponding major and minor tag.
      # e.g. Update v1 and v1.2 when releasing v1.2.3
      - name: Update corresponding major and minor tag.
        if: "!steps.bumpr.outputs.skip"
        uses: haya14busa/action-update-semver@v1
        with:
          github_token: ${{ secrets.github_token }}
          tag: ${{ steps.bumpr.outputs.next_version }}
      # Use bumpversion to update version in code
      # See. https://pypi.org/project/bump2version/
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache python environment
        uses: actions/cache@v2
        id: cache-python-env
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('pyproject.toml') }}-bumpversion
      - name: Update pip
        if: steps.cache-python-env.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
      - name: Install bump2version
        if: steps.cache-python-env.outputs.cache-hit != 'true'
        run: |
          pip install bump2version
      - name: Get current semver tag
        id: get_setmver
        uses: rickstaa/action-get-semver@v1
        with:
          verbose: "true"
      - name: Make sure the version in all code files is correct
        run: |
          bumpversion --no-tag --no-commit --new-version ${{ steps.get_setmver.outputs.current_version }} patch
      - name: Commit version related changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ steps.get_ref.outputs.value }}
          commit_message: ":bookmark: Updates documentation version to ${{ steps.get_setmver.outputs.current_version }}"
      # Update CHANGELOG.md
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Install auto-changelog
        run: |
          npm install -g auto-changelog
      - name: Create CHANGELOG.md file using auto-changelog
        run: |
          auto-changelog
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ steps.get_ref.outputs.value }}
          commit_message: ":memo: Updates CHANGELOG.md"
      # Create release changelog
      - name: Build release changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@main
        env:
          configuration: ".github/workflows/configuration_complex.json"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Create pre-release with changelog
      - name: Create pre-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-check:
    if: github.event.action == 'labeled'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Post bumpr status comment
        uses: haya14busa/action-bumpr@v1
